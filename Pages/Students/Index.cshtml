@page
@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Students:</h2>


<div class="row">
    <div class="col-4">
        <a asp-page="Create">Create New</a>
    </div>
    <div class="col-3"></div>
    <div class="col-5" align="right">

        <form method="get" asp-page="./Index">
            <div class="form-action no-color" align="right">
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>

    </div>
</div>
<div align="right">
    <a asp-page="./Index">Back to full list</a>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].FullName)
                </a>
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Students[0].FirstName)
            </th>*@
            @*<th>
                @Html.DisplayNameFor(model => model.Students[0].Address)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Students[0].City)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Students[0].State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Students[0].Zip)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Students[0].Email)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.StatusSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Students[0].Status)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>*@
                @*<td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.State)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if ((await AuthorizationService.AuthorizeAsync(
               User, item,
               StudentOperations.Update)).Succeeded)
                    {
                        <a asp-page="./Edit" asp-route-id="@item.StudentId">Edit</a>
                        <text> | </text>
                    }

                    <a asp-page="./Details" asp-route-id="@item.StudentId">Details</a>

                    @if ((await AuthorizationService.AuthorizeAsync(
               User, item,
               StudentOperations.Delete)).Succeeded)
                    {
                        <text> | </text>
                        <a asp-page="./Delete" asp-route-id="@item.StudentId">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex-1)"
   asp-route-CurrentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">Previous</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex+1)"
   asp-route-CurrentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">Next</a>
